
build/main.elf:     Dateiformat elf32-avr

Sektionen:
Idx Name          Größe     VMA       LMA       Datei-Off Ausr.
  0 .text         00000160  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00000160  000001d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  000001d4  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000054  00000000  00000000  000008a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .comment      00000011  00000000  00000000  000008f4  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 00000028  00000000  00000000  00000905  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000028f  00000000  00000000  0000092d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000019d  00000000  00000000  00000bbc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000000ee  00000000  00000000  00000d59  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000070  00000000  00000000  00000e48  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000173  00000000  00000000  00000eb8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000f0  00000000  00000000  0000102b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000018  00000000  00000000  0000111b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__ctors_end>
   4:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
   8:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
   c:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
  10:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
  14:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
  18:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
  1c:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
  20:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
  24:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
  28:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
  2c:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
  30:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
  34:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
  38:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
  3c:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
  40:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
  44:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
  48:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
  4c:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
  50:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
  54:	75 00       	.word	0x0075	; ????
  56:	75 00       	.word	0x0075	; ????
  58:	75 00       	.word	0x0075	; ????
  5a:	75 00       	.word	0x0075	; ????
  5c:	77 00       	.word	0x0077	; ????
  5e:	77 00       	.word	0x0077	; ????
  60:	77 00       	.word	0x0077	; ????
  62:	79 00       	.word	0x0079	; ????
  64:	77 00       	.word	0x0077	; ????
  66:	79 00       	.word	0x0079	; ????
  68:	77 00       	.word	0x0077	; ????
  6a:	79 00       	.word	0x0079	; ????
  6c:	77 00       	.word	0x0077	; ????
  6e:	79 00       	.word	0x0079	; ????
  70:	77 00       	.word	0x0077	; ????
  72:	79 00       	.word	0x0079	; ????
  74:	77 00       	.word	0x0077	; ????
  76:	79 00       	.word	0x0079	; ????
  78:	79 00       	.word	0x0079	; ????
  7a:	79 00       	.word	0x0079	; ????
  7c:	84 00       	.word	0x0084	; ????
  7e:	84 00       	.word	0x0084	; ????
  80:	84 00       	.word	0x0084	; ????
  82:	84 00       	.word	0x0084	; ????
  84:	86 00       	.word	0x0086	; ????
  86:	86 00       	.word	0x0086	; ????
  88:	86 00       	.word	0x0086	; ????
  8a:	88 00       	.word	0x0088	; ????
  8c:	86 00       	.word	0x0086	; ????
  8e:	88 00       	.word	0x0088	; ????
  90:	86 00       	.word	0x0086	; ????
  92:	88 00       	.word	0x0088	; ????
  94:	86 00       	.word	0x0086	; ????
  96:	88 00       	.word	0x0088	; ????
  98:	86 00       	.word	0x0086	; ????
  9a:	88 00       	.word	0x0088	; ????
  9c:	86 00       	.word	0x0086	; ????
  9e:	88 00       	.word	0x0088	; ????
  a0:	88 00       	.word	0x0088	; ????
  a2:	88 00       	.word	0x0088	; ????

000000a4 <__ctors_end>:
  a4:	11 24       	eor	r1, r1
  a6:	1f be       	out	0x3f, r1	; 63
  a8:	cf e5       	ldi	r28, 0x5F	; 95
  aa:	d4 e0       	ldi	r29, 0x04	; 4
  ac:	de bf       	out	0x3e, r29	; 62
  ae:	cd bf       	out	0x3d, r28	; 61
  b0:	0e 94 9f 00 	call	0x13e	; 0x13e <main>
  b4:	0c 94 ae 00 	jmp	0x15c	; 0x15c <_exit>

000000b8 <__bad_interrupt>:
  b8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000bc <delay_ms>:
    @return none
*/
void delay_ms(uint16_t ms)
{
    uint16_t t=0;
    for (t=0; t<=ms; t++) {
  bc:	20 e0       	ldi	r18, 0x00	; 0
  be:	30 e0       	ldi	r19, 0x00	; 0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  c0:	e9 ef       	ldi	r30, 0xF9	; 249
  c2:	f0 e0       	ldi	r31, 0x00	; 0
  c4:	31 97       	sbiw	r30, 0x01	; 1
  c6:	f1 f7       	brne	.-4      	; 0xc4 <delay_ms+0x8>
  c8:	00 c0       	rjmp	.+0      	; 0xca <delay_ms+0xe>
  ca:	00 00       	nop
  cc:	2f 5f       	subi	r18, 0xFF	; 255
  ce:	3f 4f       	sbci	r19, 0xFF	; 255
  d0:	82 17       	cp	r24, r18
  d2:	93 07       	cpc	r25, r19
  d4:	a8 f7       	brcc	.-22     	; 0xc0 <delay_ms+0x4>
        _delay_ms(1);
    }
}
  d6:	08 95       	ret

000000d8 <setLED>:

void setLED(int led) {
    int port;
    int pin;

    switch(led) {
  d8:	01 97       	sbiw	r24, 0x01	; 1
  da:	84 31       	cpi	r24, 0x14	; 20
  dc:	91 05       	cpc	r25, r1
  de:	50 f4       	brcc	.+20     	; 0xf4 <setLED+0x1c>
  e0:	86 5d       	subi	r24, 0xD6	; 214
  e2:	9f 4f       	sbci	r25, 0xFF	; 255
  e4:	fc 01       	movw	r30, r24
  e6:	0c 94 a8 00 	jmp	0x150	; 0x150 <__tablejump2__>
        case 1:
        case 2:
        case 3:
        case 4:
            port = PORTB;
  ea:	88 b3       	in	r24, 0x18	; 24
            break;
  ec:	08 95       	ret
        case 9:
        case 11:
        case 13:
        case 15:
        case 17:
            port = PORTC;
  ee:	85 b3       	in	r24, 0x15	; 21
            break;
  f0:	08 95       	ret
        case 14:
        case 16:
        case 18:
        case 19:
        case 20:
            port = PORTD;
  f2:	82 b3       	in	r24, 0x12	; 18
  f4:	08 95       	ret

000000f6 <resetLED>:

void resetLED(int led) {
    int port;
    int pin;

    switch(led) {
  f6:	01 97       	sbiw	r24, 0x01	; 1
  f8:	84 31       	cpi	r24, 0x14	; 20
  fa:	91 05       	cpc	r25, r1
  fc:	50 f4       	brcc	.+20     	; 0x112 <resetLED+0x1c>
  fe:	82 5c       	subi	r24, 0xC2	; 194
 100:	9f 4f       	sbci	r25, 0xFF	; 255
 102:	fc 01       	movw	r30, r24
 104:	0c 94 a8 00 	jmp	0x150	; 0x150 <__tablejump2__>
        case 1:
        case 2:
        case 3:
        case 4:
            port = PORTB;
 108:	88 b3       	in	r24, 0x18	; 24
            break;
 10a:	08 95       	ret
        case 9:
        case 11:
        case 13:
        case 15:
        case 17:
            port = PORTC;
 10c:	85 b3       	in	r24, 0x15	; 21
            break;
 10e:	08 95       	ret
        case 14:
        case 16:
        case 18:
        case 19:
        case 20:
            port = PORTD;
 110:	82 b3       	in	r24, 0x12	; 18
 112:	08 95       	ret

00000114 <lamptest>:
    }
    port &= ~(1<<pin);
}


void lamptest() {
 114:	cf 93       	push	r28
 116:	df 93       	push	r29
 118:	c1 e0       	ldi	r28, 0x01	; 1
 11a:	d0 e0       	ldi	r29, 0x00	; 0
    uint8_t i;
    for (i=1; i<=20; i++) {
        setLED(i);
 11c:	ce 01       	movw	r24, r28
 11e:	0e 94 6c 00 	call	0xd8	; 0xd8 <setLED>
        delay_ms(1000);
 122:	88 ee       	ldi	r24, 0xE8	; 232
 124:	93 e0       	ldi	r25, 0x03	; 3
 126:	0e 94 5e 00 	call	0xbc	; 0xbc <delay_ms>
        resetLED(i);
 12a:	ce 01       	movw	r24, r28
 12c:	0e 94 7b 00 	call	0xf6	; 0xf6 <resetLED>
 130:	21 96       	adiw	r28, 0x01	; 1
}


void lamptest() {
    uint8_t i;
    for (i=1; i<=20; i++) {
 132:	c5 31       	cpi	r28, 0x15	; 21
 134:	d1 05       	cpc	r29, r1
 136:	91 f7       	brne	.-28     	; 0x11c <lamptest+0x8>
        setLED(i);
        delay_ms(1000);
        resetLED(i);
    }
}
 138:	df 91       	pop	r29
 13a:	cf 91       	pop	r28
 13c:	08 95       	ret

0000013e <main>:

int main(void)
{

    // Define outputs
    DDRB = 0xff;
 13e:	8f ef       	ldi	r24, 0xFF	; 255
 140:	87 bb       	out	0x17, r24	; 23
    DDRC = 0xFF;
 142:	84 bb       	out	0x14, r24	; 20
    DDRD = 0xFF;
 144:	81 bb       	out	0x11, r24	; 17

    // Initialize all outputs as low.
    PORTB = 0;
 146:	18 ba       	out	0x18, r1	; 24
    PORTC = 0;
 148:	15 ba       	out	0x15, r1	; 21
    PORTD = 0;
 14a:	12 ba       	out	0x12, r1	; 18
    switch(led) {
        case 1:
        case 2:
        case 3:
        case 4:
            port = PORTB;
 14c:	88 b3       	in	r24, 0x18	; 24
 14e:	ff cf       	rjmp	.-2      	; 0x14e <main+0x10>

00000150 <__tablejump2__>:
 150:	ee 0f       	add	r30, r30
 152:	ff 1f       	adc	r31, r31

00000154 <__tablejump__>:
 154:	05 90       	lpm	r0, Z+
 156:	f4 91       	lpm	r31, Z
 158:	e0 2d       	mov	r30, r0
 15a:	09 94       	ijmp

0000015c <_exit>:
 15c:	f8 94       	cli

0000015e <__stop_program>:
 15e:	ff cf       	rjmp	.-2      	; 0x15e <__stop_program>
